import os
import time

import config
import requests
from vk_api import VkUpload

from bot.files import Files
from bot.messages import Messages
from bot.utils import admin_utils


def _handle_waiting_confirmation(self, user_id, text):
    try:
        user_data = self.state_manager.get_user_data(user_id)
        key = user_data.get("key")
        new_text = user_data.get("new_text")

        if text.strip().lower() == "–¥–∞":
            import html
            decoded_text = html.unescape(new_text)
            Messages.set(key, decoded_text)
            self.send_message(user_id, f"‚úÖ –¢–µ–∫—Å—Ç –¥–ª—è '{key}' –æ–±–Ω–æ–≤–ª—ë–Ω.")
        else:
            self.send_message(user_id, "‚ùå –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")

        self.state_manager.clear_state(user_id)
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –≤ _handle_waiting_confirmation: {e}")
        self.send_message(user_id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–∑–∂–µ")

def _handle_waiting_text(self, user_id, text, event):
    try:
        key = self.state_manager.get_user_data(user_id).get("key")
        self.state_manager.set_state(user_id, "waiting_confirmation", key=key, new_text=text)
        self.send_message(
            user_id,
            f"–ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è /{key}:\n\n{text}\n\n–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å?\n- –¥–∞\n- –Ω–µ—Ç"
        )
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –≤ _handle_waiting_text: {e}")
        self.send_message(user_id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–∑–∂–µ")

def _handle_admin_command(self, user_id, text, event):
    try:
        step = self.state_manager.get_step(user_id)

        if step == "waiting_new_file":
            _handle_waiting_file(self, user_id, event)
            return
        if step == "waiting_new_text":
            _handle_waiting_text(self, user_id, text, event)
            return
        if step == "editing_file_mode":
            _handle_editing_file_mode(self, user_id, text)
            return
        if step == "editing_mode":
            _handle_editing_mode(self, user_id, text)
            return
        if step == "waiting_confirmation":
            _handle_waiting_confirmation(self, user_id, text)
            return

        parts = text.strip().split()

        if not parts:
            self.send_message(user_id, "–ü–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Ñ–∞–π–ª–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∫–æ–º–∞–Ω–¥—É.")
            _handle_admin_help(self, user_id)
            return

        command = parts[0]
        args = parts[1:]

        command_handlers = {
            "/show_admins": _handle_show_admins,
            "/add_admin": _handle_add_admin,
            "/delete_admin": _handle_delete_admin,
            "/edit_spis": _handle_edit_spis,
            "/edit_text": _handle_edit_text,
            "/edit_file": _handle_edit_file,
            "/admin": _handle_admin_help,
            "/exit": _handle_exit_admin_mode
        }

        handler = command_handlers.get(command)
        if handler is not None:
            handler(self, user_id, args, event)
        else:
            self.send_message(user_id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∞–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥–∞.")
            _handle_admin_help(self, user_id)

    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –≤ _handle_admin_command: {e}")
        self.send_message(user_id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–∑–∂–µ")

def _handle_exit_admin_mode(self, user_id, args, event):
    try:

        current_step = self.state_manager.get_step(user_id)
        self.state_manager.set_state(user_id, current_step, admin_mode_exited=True)
        self.send_message(
            user_id,
            "–í—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –≤—ã—à–ª–∏ –∏–∑ –∞–¥–º–∏–Ω-—Ä–µ–∂–∏–º–∞.\n"
            "–¢–µ–ø–µ—Ä—å –±–æ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–∞—Å –∫–∞–∫ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å, –≤–≤–µ–¥–∏—Ç–µ /admin"
        )
        self.handle_new_user(user_id)

    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –≤ _handle_exit_admin_mode: {e}")
        self.send_message(user_id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–∑–∂–µ")


def _handle_admin_help(self, user_id, args=None, event=None):
    try:

        if self.state_manager.get_step("admin_mode_exited"):
            self.state_manager.clear_state(user_id, "admin_mode_exited")
        self.send_message(
            user_id,
            "üí° –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å. –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n\n"
            "/admin - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n"
            "/show_admins - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤\n"
            "/add_admin - –¥–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞\n"
            "/delete_admin - —É–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞\n"
            "/edit_text - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞\n"
            "/edit_file - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª—ã —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞\n"
            "/edit_spis - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –≠–ü–ë\n"
            "/exit - –≤—ã—Ö–æ–¥ –∏–∑ –∞–¥–º–∏–Ω —Ä–µ–∂–∏–º–∞\n"

        )
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –≤ _handle_admin_help: {e}")
        self.send_message(user_id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–∑–∂–µ")

def _handle_show_admins(self, user_id, args, event):
    try:
        admins = config.Config.ADMINS
        if not admins:
            self.send_message(user_id, "–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –ø—É—Å—Ç.")
        else:
            admin_list = "\n".join([f"vk.com/id{aid}" for aid in admins])
            self.send_message(user_id, f"–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤:\n{admin_list}")
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –≤ _handle_show_admins: {e}")
        self.send_message(user_id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–∑–∂–µ")

def _handle_add_admin(self, user_id, args, event):
    try:
        if len(args) != 1:
            self.send_message(
                user_id,
                "‚ö†Ô∏è –§–æ—Ä–º–∞—Ç: /add_admin <ID –∏–ª–∏ –ù–∏–∫–Ω–µ–π–º>\n"
                "–ù–∞–ø—Ä–∏–º–µ—Ä: /add_admin leo_gsh")
            return

        arg = args[0]
        new_admin = int(arg) if arg.isdigit() else admin_utils.get_user_id_by_nickname(self, arg)

        if new_admin is None:
            self.send_message(user_id, f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–∏–∫–Ω–µ–π–º–æ–º {arg}, –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID.")
            return

        if new_admin in config.Config.ADMINS:
            self.send_message(user_id, f"vk.com/id{new_admin} —É–∂–µ –∞–¥–º–∏–Ω.")
        else:
            config.Config.ADMINS.append(new_admin)
            config.Config.save_settings()
            self.send_message(user_id, f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω vk.com/id{new_admin} –≤ —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤.")
        return
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –≤ _handle_add_admin: {e}")
        self.send_message(user_id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–∑–∂–µ")


def _handle_delete_admin(self, user_id, args, event):
    try:
        if len(args) != 1:
            self.send_message(
                user_id,
                "‚ö†Ô∏è –§–æ—Ä–º–∞—Ç: /delete_admin <ID –∏–ª–∏ –ù–∏–∫–Ω–µ–π–º>\n"
                "–ù–∞–ø—Ä–∏–º–µ—Ä: /delete_admin leo_gsh")
            return

        arg = args[0]
        remove_id = int(arg) if arg.isdigit() else admin_utils.get_user_id_by_nickname(self, arg)

        if remove_id is None:
            self.send_message(user_id, f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–∏–∫–Ω–µ–π–º–æ–º {arg}, –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID.")
            return

        if remove_id in config.Config.IMMUTABLE_ADMINS:
            self.send_message(user_id, "‚ùå –ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
            return

        if remove_id in config.Config.ADMINS:
            config.Config.ADMINS.remove(remove_id)
            config.Config.save_settings()
            self.send_message(user_id, f"‚úÖ –£–¥–∞–ª—ë–Ω vk.com/id{remove_id} –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–æ–≤.")
        else:
            self.send_message(user_id, "‚ùå –¢–∞–∫–æ–≥–æ –∞–¥–º–∏–Ω–∞ –Ω–µ—Ç.")
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –≤ _handle_delete_admin: {e}")
        self.send_message(user_id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–∑–∂–µ")

def _handle_edit_spis(self, user_id, args, event):
    try:
        full_event = self.vk.messages.getById(message_ids=event.message_id)['items'][0]
        attachments = full_event.get("attachments")

        if not attachments:
            self.send_message(user_id, "‚ö†Ô∏è–§–æ—Ä–º–∞—Ç: /edit_spis —Å –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–º Excel-—Ñ–∞–π–ª–æ–º (.xlsx)")
            return

        attachment = attachments[0]
        if attachment.get("type") != "doc":
            self.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /edit_spis –∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ Excel-—Ñ–∞–π–ª —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö (.xlsx)")
            return

        doc = attachment["doc"]
        doc_url = doc.get('url')

        try:
            response = requests.get(doc_url)
            response.raise_for_status()

            filename = f"assets/Spisok.xlsx"
            with open(filename, "wb") as f:
                f.write(response.content)

            print(f"[INFO] –î–æ–∫—É–º–µ–Ω—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {filename}")
            self.send_message(user_id, "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–ø–∏—Å–∫–∞ —Å –Ω–æ–º–µ—Ä–∞–º–∏ –≠–ü–ë —É—Å–ø–µ—à–Ω–æ. –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã.")

        except Exception as e:
            print(f"[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {e}")
            self.send_message(user_id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞.")

    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –≤ _handle_edit_spis: {e}")
        self.send_message(user_id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–∑–∂–µ")


def _handle_edit_text(self, user_id, args, event):
    try:
        Messages.load()
        response = "–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á, —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:\n\n"
        for key in Messages._messages:
            preview = Messages._messages[key].split("\n")[0]
            response += f"/{key} ‚Äî {preview}...\n"

        self.send_message(user_id, response)
        self.state_manager.set_state(user_id, "editing_mode")

    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –≤ _handle_edit_text: {e}")
        self.send_message(user_id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–∑–∂–µ")

def _handle_editing_mode(self, user_id, text):
    try:
        if text == "/admin":
            self.state_manager.clear_state(user_id)
            _handle_admin_help(self, user_id)
            return

        if not Messages._messages:
            self.send_message(user_id, "‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.")
            return

        if not text.startswith("/"):
            self.send_message(
                user_id,
                "‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ /–∫–ª—é—á_—Å–æ–æ–±—â–µ–Ω–∏—è\n"
                "–ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ /admin –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return

        key = text[1:]
        if key not in Messages._messages:
            self.send_message(
                user_id,
                f"‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª—é—á–æ–º /{key} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n"
                f"–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª—é—á –∏–ª–∏ /admin –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return

        self.state_manager.set_state(user_id, "waiting_new_text", key=key)
        current_message = Messages.get(key)
        self.send_message(
            user_id,
            f"–¢–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è /{key}:\n\n{current_message}")
        self.send_message(user_id, f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è /{key}:")

    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –≤ _handle_editing_mode: {e}")
        self.send_message(user_id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–∑–∂–µ")

def _handle_edit_file(self, user_id, args, event):
    try:
        Files.load()
        response = "–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á —Å–æ–æ–±—â–µ–Ω–∏—è, —Ñ–∞–π–ª—ã –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:\n\n"
        for key in Files._files:
            response += f"/{key}\n"

        self.send_message(user_id, response)
        self.state_manager.set_state(user_id, "editing_file_mode")
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –≤ _handle_edit_file: {e}")
        self.send_message(user_id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–∑–∂–µ")

def _handle_editing_file_mode(self, user_id, text):
    try:
        if text == "/admin":
            self.state_manager.clear_state(user_id)
            _handle_admin_help(self, user_id)
            return

        if not Files._files:
            self.send_message(user_id, "‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.")
            return

        if not text.startswith("/"):
            self.send_message(
                user_id,
                "‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ /–∫–ª—é—á_—Å–æ–æ–±—â–µ–Ω–∏—è\n"
                "–ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ /admin –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return

        key = text[1:]
        if key not in Files._files:
            self.send_message(
                user_id,
                f"‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª—é—á–æ–º /{key} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n"
                f"–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª—é—á –∏–ª–∏ /admin –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return

        self.state_manager.set_state(user_id, "waiting_new_file", key=key)
        current_files = Files.get(key)

        if not current_files or len(current_files) == 0:
            self.send_message(user_id, f"–î–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è /{key} –Ω–µ—Ç —Ñ–∞–π–ª–æ–≤.")
        else:
            self.send_message(
                user_id,
                f"–¢–µ–∫—É—â–∏–µ —Ñ–∞–π–ª—ã –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è /{key}",
                attachment=current_files
            )

        self.send_message(user_id, f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è /{key}:")

    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –≤ _handle_editing_file_mode: {e}")
        self.send_message(user_id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–∑–∂–µ")

def _handle_waiting_file(self, user_id, event):
    try:
        key = self.state_manager.get_user_data(user_id).get("key")
        try:
            full_event = self.vk.messages.getById(message_ids=event.message_id)['items'][0]
        except Exception as e:
            print(f"[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ ID: {e}")
            self.send_message(user_id, "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è.")
            return

        attachments = full_event.get("attachments", [])
        print(f"[DEBUG] –ü–æ–ª—É—á–µ–Ω—ã –≤–ª–æ–∂–µ–Ω–∏—è: {attachments}")

        attachments_list = []

        for idx, attachment in enumerate(attachments):
            if attachment.get("type") == "photo":
                photo = attachment["photo"]
                print(f"[DEBUG] –ù–∞–π–¥–µ–Ω–æ —Ñ–æ—Ç–æ: {photo}")

                try:
                    sizes = photo.get("sizes", [])
                    if not sizes:
                        print("[WARNING] –£ —Ñ–æ—Ç–æ –Ω–µ—Ç sizes")
                        continue
                    largest = sorted(sizes, key=lambda x: x["width"] * x["height"])[-1]
                    photo_url = largest["url"]
                    print(f"[DEBUG] URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {photo_url}")

                    response = requests.get(photo_url)
                    response.raise_for_status()

                    file_extension = photo_url.split('.')[-1].split('?')[0]
                    filename = f"assets/{key}_photo_{int(time.time())}_{idx}.{file_extension}"

                    with open(filename, "wb") as f:
                        f.write(response.content)
                    print(f"[INFO] –§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {filename}")

                    upload = VkUpload(self.vk_session)
                    attachment_info = upload.photo_messages(filename)
                    photo_info = attachment_info[0]
                    owner_id = photo_info['owner_id']
                    photo_id = photo_info['id']
                    access_key = photo_info.get('access_key')

                    attachment_str = f"photo{owner_id}_{photo_id}"
                    if access_key:
                        attachment_str += f"_{access_key}"

                    attachments_list.append({
                        "type": "photo",
                        "value": attachment_str,
                        "filename": filename
                    })

                    try:
                        os.remove(filename)
                        print(f"[INFO] –§–∞–π–ª {filename} —É–¥–∞–ª–µ–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞")
                    except Exception as e:
                        print(f"[WARNING] –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª {filename}: {e}")

                except Exception as e:
                    print(f"[ERROR] –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ: {e}")
                    self.send_message(user_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–æ—Ç–æ.")

            elif attachment.get("type") == "doc":
                doc = attachment["doc"]
                print(f"[DEBUG] –ù–∞–π–¥–µ–Ω –¥–æ–∫—É–º–µ–Ω—Ç: {doc}")

                try:
                    allowed_ext = ['doc', 'docx', 'pdf', 'xls', 'xlsx', 'txt']
                    ext = doc.get('ext')

                    if ext not in allowed_ext:
                        print(f"[WARNING] –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞: {ext}")
                        self.send_message(user_id, f"‚ùå –¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞ .{ext} –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.")
                        continue

                    doc_url = doc.get('url')
                    if not doc_url:
                        print("[WARNING] –£ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –Ω–µ—Ç URL")
                        continue

                    response = requests.get(doc_url)
                    response.raise_for_status()

                    filename = f"assets/{key}_doc_{int(time.time())}_{idx}.{ext}"

                    with open(filename, "wb") as f:
                        f.write(response.content)
                    print(f"[INFO] –î–æ–∫—É–º–µ–Ω—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {filename}")

                    upload = VkUpload(self.vk_session)

                    doc_upload = upload.document_message(
                        doc=filename,
                        title=doc.get('title', f"document_{key}"),
                        peer_id=event.peer_id
                    )

                    doc_info = doc_upload['doc']
                    doc_str = f"doc{doc_info['owner_id']}_{doc_info['id']}"
                    if doc_info.get('access_key'):
                        doc_str += f"_{doc_info['access_key']}"

                    attachments_list.append({
                        "type": "doc",
                        "value": doc_str,
                        "filename": filename,
                        "ext": ext,
                        "title": doc.get('title', '')
                    })

                    try:
                        os.remove(filename)
                        print(f"[INFO] –§–∞–π–ª {filename} —É–¥–∞–ª–µ–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞")
                    except Exception as e:
                        print(f"[WARNING] –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª {filename}: {e}")

                except Exception as e:
                    print(f"[ERROR] –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {e}")
                    self.send_message(user_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç.")

        if attachments_list:
            try:
                Files.load()
                Files._files[key] = attachments_list
                Files.save()

                print(f"[DEBUG] –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ JSON –¥–ª—è –∫–ª—é—á–∞ '{key}': {attachments_list}")

                photo_count = sum(1 for item in attachments_list if item["type"] == "photo")
                doc_count = sum(1 for item in attachments_list if item["type"] == "doc")

                msg = f"‚úÖ –î–ª—è –∫–ª—é—á–∞ /{key} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ:\n"
                if photo_count > 0:
                    msg += f"üì∑ –§–æ—Ç–æ: {photo_count} —à—Ç.\n"
                if doc_count > 0:
                    msg += f"üìÑ –î–æ–∫—É–º–µ–Ω—Ç–æ–≤: {doc_count} —à—Ç."

                self.send_message(user_id, msg)

            except Exception as e:
                print(f"[CRITICAL] –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è JSON: {e}")
                self.send_message(user_id, "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö.")

        self.state_manager.clear_state(user_id)

    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –≤ _handle_waiting_file: {e}")
        self.send_message(user_id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–∑–∂–µ")

